; ModuleID = '/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite/test_cases_bc/tuaf/CWE416_Use_After_Free__malloc_free_wchar_t_64a.c.bc'
source_filename = "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite/src/tuaf/CWE416_Use_After_Free__malloc_free_wchar_t_64a.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [18 x i8] c"Calling good()...\00", align 1, !dbg !17
@.str.4 = private unnamed_addr constant [16 x i8] c"Finished good()\00", align 1, !dbg !23
@.str.5 = private unnamed_addr constant [17 x i8] c"Calling bad()...\00", align 1, !dbg !28
@.str.6 = private unnamed_addr constant [15 x i8] c"Finished bad()\00", align 1, !dbg !33

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MUSTALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !57 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !61, metadata !DIExpression()), !dbg !62
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !63, metadata !DIExpression()), !dbg !64
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !65
  ret void, !dbg !66
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(ptr noundef, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PARTIALALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !67 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !68, metadata !DIExpression()), !dbg !69
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !70, metadata !DIExpression()), !dbg !71
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !72
  ret void, !dbg !73
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !74 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !75, metadata !DIExpression()), !dbg !76
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !77, metadata !DIExpression()), !dbg !78
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !79
  ret void, !dbg !80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NOALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !81 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !82, metadata !DIExpression()), !dbg !83
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !84, metadata !DIExpression()), !dbg !85
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !86
  ret void, !dbg !87
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_MAYALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !88 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !89, metadata !DIExpression()), !dbg !90
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !91, metadata !DIExpression()), !dbg !92
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !93
  ret void, !dbg !94
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_NOALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !95 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !96, metadata !DIExpression()), !dbg !97
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !98, metadata !DIExpression()), !dbg !99
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !100
  ret void, !dbg !101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !102 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !105, metadata !DIExpression()), !dbg !106
  %0 = load i32, ptr %n.addr, align 4, !dbg !107
  %conv = sext i32 %0 to i64, !dbg !107
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !108
  ret ptr %call, !dbg !109
}

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @DOUBLEFREEMALLOC(i32 noundef %n) #0 !dbg !110 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !111, metadata !DIExpression()), !dbg !112
  %0 = load i32, ptr %n.addr, align 4, !dbg !113
  %conv = sext i32 %0 to i64, !dbg !113
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !114
  ret ptr %call, !dbg !115
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !116 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !117, metadata !DIExpression()), !dbg !118
  %0 = load i32, ptr %n.addr, align 4, !dbg !119
  %conv = sext i32 %0 to i64, !dbg !119
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !120
  ret ptr %call, !dbg !121
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !122 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !123, metadata !DIExpression()), !dbg !124
  %0 = load i32, ptr %n.addr, align 4, !dbg !125
  %conv = sext i32 %0 to i64, !dbg !125
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !126
  ret ptr %call, !dbg !127
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !128 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !129, metadata !DIExpression()), !dbg !130
  %0 = load i32, ptr %n.addr, align 4, !dbg !131
  %conv = sext i32 %0 to i64, !dbg !131
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !132
  ret ptr %call, !dbg !133
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !134 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !135, metadata !DIExpression()), !dbg !136
  %0 = load i32, ptr %n.addr, align 4, !dbg !137
  %conv = sext i32 %0 to i64, !dbg !137
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !138
  ret ptr %call, !dbg !139
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !140 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !141, metadata !DIExpression()), !dbg !142
  %0 = load i32, ptr %n.addr, align 4, !dbg !143
  %conv = sext i32 %0 to i64, !dbg !143
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !144
  ret ptr %call, !dbg !145
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !146 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !147, metadata !DIExpression()), !dbg !148
  %0 = load i32, ptr %n.addr, align 4, !dbg !149
  %conv = sext i32 %0 to i64, !dbg !149
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !150
  ret ptr %call, !dbg !151
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RC_ACCESS(i32 noundef %id, i32 noundef %flags) #0 !dbg !152 {
entry:
  %id.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %id, ptr %id.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %id.addr, metadata !155, metadata !DIExpression()), !dbg !156
  store i32 %flags, ptr %flags.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !157, metadata !DIExpression()), !dbg !158
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !159
  ret void, !dbg !160
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CXT_THREAD(i32 noundef %thdid, ptr noundef %cxt) #0 !dbg !161 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %thdid.addr, metadata !165, metadata !DIExpression()), !dbg !166
  store ptr %cxt, ptr %cxt.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %cxt.addr, metadata !167, metadata !DIExpression()), !dbg !168
  ret void, !dbg !169
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @TCT_ACCESS(i32 noundef %thdid, ptr noundef %cxt) #0 !dbg !170 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %thdid.addr, metadata !171, metadata !DIExpression()), !dbg !172
  store ptr %cxt, ptr %cxt.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %cxt.addr, metadata !173, metadata !DIExpression()), !dbg !174
  ret void, !dbg !175
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @INTERLEV_ACCESS(i32 noundef %thdid, ptr noundef %cxt, ptr noundef %lev) #0 !dbg !176 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  %lev.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %thdid.addr, metadata !179, metadata !DIExpression()), !dbg !180
  store ptr %cxt, ptr %cxt.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %cxt.addr, metadata !181, metadata !DIExpression()), !dbg !182
  store ptr %lev, ptr %lev.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %lev.addr, metadata !183, metadata !DIExpression()), !dbg !184
  ret void, !dbg !185
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @LOCK(ptr noundef %lockname) #0 !dbg !186 {
entry:
  %lockname.addr = alloca ptr, align 8
  store ptr %lockname, ptr %lockname.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %lockname.addr, metadata !189, metadata !DIExpression()), !dbg !190
  ret void, !dbg !191
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PAUSE(ptr noundef %str) #0 !dbg !192 {
entry:
  %str.addr = alloca ptr, align 8
  store ptr %str, ptr %str.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %str.addr, metadata !193, metadata !DIExpression()), !dbg !194
  %0 = load ptr, ptr %str.addr, align 8, !dbg !195
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str.1, ptr noundef %0), !dbg !196
  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.2), !dbg !197
  %call2 = call i32 @getchar(), !dbg !198
  ret void, !dbg !199
}

declare i32 @getchar() #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEUAFFUNC(ptr noundef %p) #0 !dbg !200 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !204, metadata !DIExpression()), !dbg !205
  %0 = load ptr, ptr %p.addr, align 8, !dbg !206
  store i32 0, ptr %0, align 4, !dbg !207
  %1 = load ptr, ptr %retval, align 8, !dbg !208
  ret ptr %1, !dbg !208
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @UAFFUNC(ptr noundef %p) #0 !dbg !209 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !210, metadata !DIExpression()), !dbg !211
  %0 = load ptr, ptr %p.addr, align 8, !dbg !212
  store i32 0, ptr %0, align 4, !dbg !213
  %1 = load ptr, ptr %retval, align 8, !dbg !214
  ret ptr %1, !dbg !214
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEFREE(ptr noundef %p) #0 !dbg !215 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !216, metadata !DIExpression()), !dbg !217
  %0 = load ptr, ptr %p.addr, align 8, !dbg !218
  call void @free(ptr noundef %0) #6, !dbg !219
  %1 = load ptr, ptr %retval, align 8, !dbg !220
  ret ptr %1, !dbg !220
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @DOUBLEFREE(ptr noundef %p) #0 !dbg !221 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !222, metadata !DIExpression()), !dbg !223
  %0 = load ptr, ptr %p.addr, align 8, !dbg !224
  call void @free(ptr noundef %0) #6, !dbg !225
  %1 = load ptr, ptr %retval, align 8, !dbg !226
  ret ptr %1, !dbg !226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deref() #0 !dbg !227 {
entry:
  ret void, !dbg !230
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE416_Use_After_Free__malloc_free_wchar_t_64b_badSink(ptr noundef %dataVoidPtr) #0 !dbg !231 {
entry:
  %dataVoidPtr.addr = alloca ptr, align 8
  %dataPtr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %dataVoidPtr, ptr %dataVoidPtr.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %dataVoidPtr.addr, metadata !234, metadata !DIExpression()), !dbg !235
  call void @llvm.dbg.declare(metadata ptr %dataPtr, metadata !236, metadata !DIExpression()), !dbg !237
  %0 = load ptr, ptr %dataVoidPtr.addr, align 8, !dbg !238
  store ptr %0, ptr %dataPtr, align 8, !dbg !237
  call void @llvm.dbg.declare(metadata ptr %data, metadata !239, metadata !DIExpression()), !dbg !240
  %1 = load ptr, ptr %dataPtr, align 8, !dbg !241
  %2 = load ptr, ptr %1, align 8, !dbg !242
  store ptr %2, ptr %data, align 8, !dbg !240
  %3 = load ptr, ptr %data, align 8, !dbg !243
  %call = call ptr @UAFFUNC(ptr noundef %3), !dbg !244
  ret void, !dbg !245
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE416_Use_After_Free__malloc_free_wchar_t_64b_goodG2BSink(ptr noundef %dataVoidPtr) #0 !dbg !246 {
entry:
  %dataVoidPtr.addr = alloca ptr, align 8
  %dataPtr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %dataVoidPtr, ptr %dataVoidPtr.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %dataVoidPtr.addr, metadata !247, metadata !DIExpression()), !dbg !248
  call void @llvm.dbg.declare(metadata ptr %dataPtr, metadata !249, metadata !DIExpression()), !dbg !250
  %0 = load ptr, ptr %dataVoidPtr.addr, align 8, !dbg !251
  store ptr %0, ptr %dataPtr, align 8, !dbg !250
  call void @llvm.dbg.declare(metadata ptr %data, metadata !252, metadata !DIExpression()), !dbg !253
  %1 = load ptr, ptr %dataPtr, align 8, !dbg !254
  %2 = load ptr, ptr %1, align 8, !dbg !255
  store ptr %2, ptr %data, align 8, !dbg !253
  %3 = load ptr, ptr %data, align 8, !dbg !256
  %call = call ptr @SAFEUAFFUNC(ptr noundef %3), !dbg !257
  ret void, !dbg !258
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE416_Use_After_Free__malloc_free_wchar_t_64b_goodB2GSink(ptr noundef %dataVoidPtr) #0 !dbg !259 {
entry:
  %dataVoidPtr.addr = alloca ptr, align 8
  %dataPtr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %dataVoidPtr, ptr %dataVoidPtr.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %dataVoidPtr.addr, metadata !260, metadata !DIExpression()), !dbg !261
  call void @llvm.dbg.declare(metadata ptr %dataPtr, metadata !262, metadata !DIExpression()), !dbg !263
  %0 = load ptr, ptr %dataVoidPtr.addr, align 8, !dbg !264
  store ptr %0, ptr %dataPtr, align 8, !dbg !263
  call void @llvm.dbg.declare(metadata ptr %data, metadata !265, metadata !DIExpression()), !dbg !266
  %1 = load ptr, ptr %dataPtr, align 8, !dbg !267
  %2 = load ptr, ptr %1, align 8, !dbg !268
  store ptr %2, ptr %data, align 8, !dbg !266
  ret void, !dbg !269
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE416_Use_After_Free__malloc_free_wchar_t_64_bad() #0 !dbg !270 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !271, metadata !DIExpression()), !dbg !272
  store ptr null, ptr %data, align 8, !dbg !273
  %call = call ptr @SAFEMALLOC(i32 noundef 400), !dbg !274
  store ptr %call, ptr %data, align 8, !dbg !275
  %0 = load ptr, ptr %data, align 8, !dbg !276
  %call1 = call ptr @wmemset(ptr noundef %0, i32 noundef 65, i64 noundef 99) #6, !dbg !277
  %1 = load ptr, ptr %data, align 8, !dbg !278
  %arrayidx = getelementptr inbounds i32, ptr %1, i64 99, !dbg !278
  store i32 0, ptr %arrayidx, align 4, !dbg !279
  %2 = load ptr, ptr %data, align 8, !dbg !280
  call void @free(ptr noundef %2) #6, !dbg !281
  call void @CWE416_Use_After_Free__malloc_free_wchar_t_64b_badSink(ptr noundef %data), !dbg !282
  ret void, !dbg !283
}

; Function Attrs: nounwind
declare ptr @wmemset(ptr noundef, i32 noundef, i64 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE416_Use_After_Free__malloc_free_wchar_t_64_good() #0 !dbg !284 {
entry:
  call void @goodG2B(), !dbg !285
  call void @goodB2G(), !dbg !286
  ret void, !dbg !287
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %argc, ptr noundef %argv) #0 !dbg !288 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  store i32 %argc, ptr %argc.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %argc.addr, metadata !292, metadata !DIExpression()), !dbg !293
  store ptr %argv, ptr %argv.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %argv.addr, metadata !294, metadata !DIExpression()), !dbg !295
  %call = call i64 @time(ptr noundef null) #6, !dbg !296
  %conv = trunc i64 %call to i32, !dbg !297
  call void @srand(i32 noundef %conv) #6, !dbg !298
  call void @printLine(ptr noundef @.str.3), !dbg !299
  call void @CWE416_Use_After_Free__malloc_free_wchar_t_64_good(), !dbg !300
  call void @printLine(ptr noundef @.str.4), !dbg !301
  call void @printLine(ptr noundef @.str.5), !dbg !302
  call void @CWE416_Use_After_Free__malloc_free_wchar_t_64_bad(), !dbg !303
  call void @printLine(ptr noundef @.str.6), !dbg !304
  ret i32 0, !dbg !305
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) #4

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #4

declare void @printLine(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodG2B() #0 !dbg !306 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !307, metadata !DIExpression()), !dbg !308
  store ptr null, ptr %data, align 8, !dbg !309
  %call = call ptr @SAFEMALLOC(i32 noundef 400), !dbg !310
  store ptr %call, ptr %data, align 8, !dbg !311
  %0 = load ptr, ptr %data, align 8, !dbg !312
  %call1 = call ptr @wmemset(ptr noundef %0, i32 noundef 65, i64 noundef 99) #6, !dbg !313
  %1 = load ptr, ptr %data, align 8, !dbg !314
  %arrayidx = getelementptr inbounds i32, ptr %1, i64 99, !dbg !314
  store i32 0, ptr %arrayidx, align 4, !dbg !315
  call void @CWE416_Use_After_Free__malloc_free_wchar_t_64b_goodG2BSink(ptr noundef %data), !dbg !316
  ret void, !dbg !317
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodB2G() #0 !dbg !318 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !319, metadata !DIExpression()), !dbg !320
  store ptr null, ptr %data, align 8, !dbg !321
  %call = call ptr @SAFEMALLOC(i32 noundef 400), !dbg !322
  store ptr %call, ptr %data, align 8, !dbg !323
  %0 = load ptr, ptr %data, align 8, !dbg !324
  %call1 = call ptr @wmemset(ptr noundef %0, i32 noundef 65, i64 noundef 99) #6, !dbg !325
  %1 = load ptr, ptr %data, align 8, !dbg !326
  %arrayidx = getelementptr inbounds i32, ptr %1, i64 99, !dbg !326
  store i32 0, ptr %arrayidx, align 4, !dbg !327
  %2 = load ptr, ptr %data, align 8, !dbg !328
  call void @free(ptr noundef %2) #6, !dbg !329
  call void @CWE416_Use_After_Free__malloc_free_wchar_t_64b_goodB2GSink(ptr noundef %data), !dbg !330
  ret void, !dbg !331
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind allocsize(0) }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!38}
!llvm.module.flags = !{!49, !50, !51, !52, !53, !54, !55}
!llvm.ident = !{!56}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "aliascheck.h", directory: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite", checksumkind: CSK_MD5, checksum: "1a872d554bb9ccba276f530467d4645b")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 2)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 94, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 4)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 95, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 25)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !19, line: 139, type: !20, isLocal: true, isDefinition: true)
!19 = !DIFile(filename: "src/tuaf/CWE416_Use_After_Free__malloc_free_wchar_t_64a.c", directory: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite", checksumkind: CSK_MD5, checksum: "2fd96e312c0c17ff04a2d3f68a8b31d6")
!20 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !21)
!21 = !{!22}
!22 = !DISubrange(count: 18)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(scope: null, file: !19, line: 141, type: !25, isLocal: true, isDefinition: true)
!25 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !26)
!26 = !{!27}
!27 = !DISubrange(count: 16)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(scope: null, file: !19, line: 144, type: !30, isLocal: true, isDefinition: true)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !31)
!31 = !{!32}
!32 = !DISubrange(count: 17)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(scope: null, file: !19, line: 146, type: !35, isLocal: true, isDefinition: true)
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !36)
!36 = !{!37}
!37 = !DISubrange(count: 15)
!38 = distinct !DICompileUnit(language: DW_LANG_C11, file: !39, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !40, globals: !48, splitDebugInlining: false, nameTableKind: None)
!39 = !DIFile(filename: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite/src/tuaf/CWE416_Use_After_Free__malloc_free_wchar_t_64a.c", directory: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite", checksumkind: CSK_MD5, checksum: "2fd96e312c0c17ff04a2d3f68a8b31d6")
!40 = !{!41, !42, !43, !47}
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !45, line: 74, baseType: !46)
!45 = !DIFile(filename: "SVF-xiao/llvm-16.0.0.obj/lib/clang/16/include/stddef.h", directory: "/g/data/ey69/xiao/project", checksumkind: CSK_MD5, checksum: "f95079da609b0e8f201cb8136304bf3b")
!46 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!47 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!48 = !{!0, !7, !12, !17, !23, !28, !33}
!49 = !{i32 7, !"Dwarf Version", i32 5}
!50 = !{i32 2, !"Debug Info Version", i32 3}
!51 = !{i32 1, !"wchar_size", i32 4}
!52 = !{i32 8, !"PIC Level", i32 2}
!53 = !{i32 7, !"PIE Level", i32 2}
!54 = !{i32 7, !"uwtable", i32 2}
!55 = !{i32 7, !"frame-pointer", i32 2}
!56 = !{!"clang version 16.0.0"}
!57 = distinct !DISubprogram(name: "MUSTALIAS", scope: !2, file: !2, line: 4, type: !58, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!58 = !DISubroutineType(types: !59)
!59 = !{null, !41, !41}
!60 = !{}
!61 = !DILocalVariable(name: "p", arg: 1, scope: !57, file: !2, line: 4, type: !41)
!62 = !DILocation(line: 4, column: 22, scope: !57)
!63 = !DILocalVariable(name: "q", arg: 2, scope: !57, file: !2, line: 4, type: !41)
!64 = !DILocation(line: 4, column: 31, scope: !57)
!65 = !DILocation(line: 5, column: 3, scope: !57)
!66 = !DILocation(line: 6, column: 1, scope: !57)
!67 = distinct !DISubprogram(name: "PARTIALALIAS", scope: !2, file: !2, line: 8, type: !58, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!68 = !DILocalVariable(name: "p", arg: 1, scope: !67, file: !2, line: 8, type: !41)
!69 = !DILocation(line: 8, column: 25, scope: !67)
!70 = !DILocalVariable(name: "q", arg: 2, scope: !67, file: !2, line: 8, type: !41)
!71 = !DILocation(line: 8, column: 34, scope: !67)
!72 = !DILocation(line: 9, column: 3, scope: !67)
!73 = !DILocation(line: 10, column: 1, scope: !67)
!74 = distinct !DISubprogram(name: "MAYALIAS", scope: !2, file: !2, line: 12, type: !58, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!75 = !DILocalVariable(name: "p", arg: 1, scope: !74, file: !2, line: 12, type: !41)
!76 = !DILocation(line: 12, column: 21, scope: !74)
!77 = !DILocalVariable(name: "q", arg: 2, scope: !74, file: !2, line: 12, type: !41)
!78 = !DILocation(line: 12, column: 30, scope: !74)
!79 = !DILocation(line: 13, column: 3, scope: !74)
!80 = !DILocation(line: 14, column: 1, scope: !74)
!81 = distinct !DISubprogram(name: "NOALIAS", scope: !2, file: !2, line: 16, type: !58, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!82 = !DILocalVariable(name: "p", arg: 1, scope: !81, file: !2, line: 16, type: !41)
!83 = !DILocation(line: 16, column: 20, scope: !81)
!84 = !DILocalVariable(name: "q", arg: 2, scope: !81, file: !2, line: 16, type: !41)
!85 = !DILocation(line: 16, column: 29, scope: !81)
!86 = !DILocation(line: 17, column: 3, scope: !81)
!87 = !DILocation(line: 18, column: 1, scope: !81)
!88 = distinct !DISubprogram(name: "EXPECTEDFAIL_MAYALIAS", scope: !2, file: !2, line: 20, type: !58, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!89 = !DILocalVariable(name: "p", arg: 1, scope: !88, file: !2, line: 20, type: !41)
!90 = !DILocation(line: 20, column: 34, scope: !88)
!91 = !DILocalVariable(name: "q", arg: 2, scope: !88, file: !2, line: 20, type: !41)
!92 = !DILocation(line: 20, column: 43, scope: !88)
!93 = !DILocation(line: 21, column: 3, scope: !88)
!94 = !DILocation(line: 22, column: 1, scope: !88)
!95 = distinct !DISubprogram(name: "EXPECTEDFAIL_NOALIAS", scope: !2, file: !2, line: 24, type: !58, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!96 = !DILocalVariable(name: "p", arg: 1, scope: !95, file: !2, line: 24, type: !41)
!97 = !DILocation(line: 24, column: 33, scope: !95)
!98 = !DILocalVariable(name: "q", arg: 2, scope: !95, file: !2, line: 24, type: !41)
!99 = !DILocation(line: 24, column: 42, scope: !95)
!100 = !DILocation(line: 25, column: 3, scope: !95)
!101 = !DILocation(line: 26, column: 1, scope: !95)
!102 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !2, file: !2, line: 29, type: !103, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!103 = !DISubroutineType(types: !104)
!104 = !{!41, !46}
!105 = !DILocalVariable(name: "n", arg: 1, scope: !102, file: !2, line: 29, type: !46)
!106 = !DILocation(line: 29, column: 22, scope: !102)
!107 = !DILocation(line: 30, column: 17, scope: !102)
!108 = !DILocation(line: 30, column: 10, scope: !102)
!109 = !DILocation(line: 30, column: 3, scope: !102)
!110 = distinct !DISubprogram(name: "DOUBLEFREEMALLOC", scope: !2, file: !2, line: 33, type: !103, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!111 = !DILocalVariable(name: "n", arg: 1, scope: !110, file: !2, line: 33, type: !46)
!112 = !DILocation(line: 33, column: 28, scope: !110)
!113 = !DILocation(line: 34, column: 19, scope: !110)
!114 = !DILocation(line: 34, column: 12, scope: !110)
!115 = !DILocation(line: 34, column: 5, scope: !110)
!116 = distinct !DISubprogram(name: "PLKMALLOC", scope: !2, file: !2, line: 37, type: !103, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!117 = !DILocalVariable(name: "n", arg: 1, scope: !116, file: !2, line: 37, type: !46)
!118 = !DILocation(line: 37, column: 21, scope: !116)
!119 = !DILocation(line: 38, column: 17, scope: !116)
!120 = !DILocation(line: 38, column: 10, scope: !116)
!121 = !DILocation(line: 38, column: 3, scope: !116)
!122 = distinct !DISubprogram(name: "NFRMALLOC", scope: !2, file: !2, line: 41, type: !103, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!123 = !DILocalVariable(name: "n", arg: 1, scope: !122, file: !2, line: 41, type: !46)
!124 = !DILocation(line: 41, column: 21, scope: !122)
!125 = !DILocation(line: 42, column: 17, scope: !122)
!126 = !DILocation(line: 42, column: 10, scope: !122)
!127 = !DILocation(line: 42, column: 3, scope: !122)
!128 = distinct !DISubprogram(name: "CLKMALLOC", scope: !2, file: !2, line: 45, type: !103, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!129 = !DILocalVariable(name: "n", arg: 1, scope: !128, file: !2, line: 45, type: !46)
!130 = !DILocation(line: 45, column: 21, scope: !128)
!131 = !DILocation(line: 46, column: 17, scope: !128)
!132 = !DILocation(line: 46, column: 10, scope: !128)
!133 = !DILocation(line: 46, column: 3, scope: !128)
!134 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !2, file: !2, line: 49, type: !103, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!135 = !DILocalVariable(name: "n", arg: 1, scope: !134, file: !2, line: 49, type: !46)
!136 = !DILocation(line: 49, column: 21, scope: !134)
!137 = !DILocation(line: 50, column: 17, scope: !134)
!138 = !DILocation(line: 50, column: 10, scope: !134)
!139 = !DILocation(line: 50, column: 3, scope: !134)
!140 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !2, file: !2, line: 53, type: !103, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!141 = !DILocalVariable(name: "n", arg: 1, scope: !140, file: !2, line: 53, type: !46)
!142 = !DILocation(line: 53, column: 21, scope: !140)
!143 = !DILocation(line: 54, column: 17, scope: !140)
!144 = !DILocation(line: 54, column: 10, scope: !140)
!145 = !DILocation(line: 54, column: 3, scope: !140)
!146 = distinct !DISubprogram(name: "LEAKFN", scope: !2, file: !2, line: 57, type: !103, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!147 = !DILocalVariable(name: "n", arg: 1, scope: !146, file: !2, line: 57, type: !46)
!148 = !DILocation(line: 57, column: 18, scope: !146)
!149 = !DILocation(line: 58, column: 17, scope: !146)
!150 = !DILocation(line: 58, column: 10, scope: !146)
!151 = !DILocation(line: 58, column: 3, scope: !146)
!152 = distinct !DISubprogram(name: "RC_ACCESS", scope: !2, file: !2, line: 67, type: !153, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !46, !46}
!155 = !DILocalVariable(name: "id", arg: 1, scope: !152, file: !2, line: 67, type: !46)
!156 = !DILocation(line: 67, column: 20, scope: !152)
!157 = !DILocalVariable(name: "flags", arg: 2, scope: !152, file: !2, line: 67, type: !46)
!158 = !DILocation(line: 67, column: 28, scope: !152)
!159 = !DILocation(line: 68, column: 3, scope: !152)
!160 = !DILocation(line: 69, column: 1, scope: !152)
!161 = distinct !DISubprogram(name: "CXT_THREAD", scope: !2, file: !2, line: 79, type: !162, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!162 = !DISubroutineType(types: !163)
!163 = !{null, !46, !164}
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!165 = !DILocalVariable(name: "thdid", arg: 1, scope: !161, file: !2, line: 79, type: !46)
!166 = !DILocation(line: 79, column: 21, scope: !161)
!167 = !DILocalVariable(name: "cxt", arg: 2, scope: !161, file: !2, line: 79, type: !164)
!168 = !DILocation(line: 79, column: 34, scope: !161)
!169 = !DILocation(line: 81, column: 1, scope: !161)
!170 = distinct !DISubprogram(name: "TCT_ACCESS", scope: !2, file: !2, line: 82, type: !162, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!171 = !DILocalVariable(name: "thdid", arg: 1, scope: !170, file: !2, line: 82, type: !46)
!172 = !DILocation(line: 82, column: 21, scope: !170)
!173 = !DILocalVariable(name: "cxt", arg: 2, scope: !170, file: !2, line: 82, type: !164)
!174 = !DILocation(line: 82, column: 33, scope: !170)
!175 = !DILocation(line: 84, column: 1, scope: !170)
!176 = distinct !DISubprogram(name: "INTERLEV_ACCESS", scope: !2, file: !2, line: 85, type: !177, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!177 = !DISubroutineType(types: !178)
!178 = !{null, !46, !164, !164}
!179 = !DILocalVariable(name: "thdid", arg: 1, scope: !176, file: !2, line: 85, type: !46)
!180 = !DILocation(line: 85, column: 26, scope: !176)
!181 = !DILocalVariable(name: "cxt", arg: 2, scope: !176, file: !2, line: 85, type: !164)
!182 = !DILocation(line: 85, column: 38, scope: !176)
!183 = !DILocalVariable(name: "lev", arg: 3, scope: !176, file: !2, line: 85, type: !164)
!184 = !DILocation(line: 85, column: 49, scope: !176)
!185 = !DILocation(line: 87, column: 1, scope: !176)
!186 = distinct !DISubprogram(name: "LOCK", scope: !2, file: !2, line: 89, type: !187, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!187 = !DISubroutineType(types: !188)
!188 = !{null, !164}
!189 = !DILocalVariable(name: "lockname", arg: 1, scope: !186, file: !2, line: 89, type: !164)
!190 = !DILocation(line: 89, column: 17, scope: !186)
!191 = !DILocation(line: 91, column: 1, scope: !186)
!192 = distinct !DISubprogram(name: "PAUSE", scope: !2, file: !2, line: 93, type: !187, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!193 = !DILocalVariable(name: "str", arg: 1, scope: !192, file: !2, line: 93, type: !164)
!194 = !DILocation(line: 93, column: 18, scope: !192)
!195 = !DILocation(line: 94, column: 18, scope: !192)
!196 = !DILocation(line: 94, column: 3, scope: !192)
!197 = !DILocation(line: 95, column: 3, scope: !192)
!198 = !DILocation(line: 96, column: 3, scope: !192)
!199 = !DILocation(line: 97, column: 1, scope: !192)
!200 = distinct !DISubprogram(name: "SAFEUAFFUNC", scope: !2, file: !2, line: 100, type: !201, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!201 = !DISubroutineType(types: !202)
!202 = !{!41, !203}
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!204 = !DILocalVariable(name: "p", arg: 1, scope: !200, file: !2, line: 100, type: !203)
!205 = !DILocation(line: 100, column: 24, scope: !200)
!206 = !DILocation(line: 101, column: 6, scope: !200)
!207 = !DILocation(line: 101, column: 8, scope: !200)
!208 = !DILocation(line: 102, column: 1, scope: !200)
!209 = distinct !DISubprogram(name: "UAFFUNC", scope: !2, file: !2, line: 104, type: !201, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!210 = !DILocalVariable(name: "p", arg: 1, scope: !209, file: !2, line: 104, type: !203)
!211 = !DILocation(line: 104, column: 20, scope: !209)
!212 = !DILocation(line: 105, column: 6, scope: !209)
!213 = !DILocation(line: 105, column: 8, scope: !209)
!214 = !DILocation(line: 106, column: 1, scope: !209)
!215 = distinct !DISubprogram(name: "SAFEFREE", scope: !2, file: !2, line: 110, type: !201, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!216 = !DILocalVariable(name: "p", arg: 1, scope: !215, file: !2, line: 110, type: !203)
!217 = !DILocation(line: 110, column: 22, scope: !215)
!218 = !DILocation(line: 111, column: 10, scope: !215)
!219 = !DILocation(line: 111, column: 5, scope: !215)
!220 = !DILocation(line: 112, column: 1, scope: !215)
!221 = distinct !DISubprogram(name: "DOUBLEFREE", scope: !2, file: !2, line: 115, type: !201, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!222 = !DILocalVariable(name: "p", arg: 1, scope: !221, file: !2, line: 115, type: !203)
!223 = !DILocation(line: 115, column: 24, scope: !221)
!224 = !DILocation(line: 116, column: 10, scope: !221)
!225 = !DILocation(line: 116, column: 5, scope: !221)
!226 = !DILocation(line: 117, column: 1, scope: !221)
!227 = distinct !DISubprogram(name: "deref", scope: !2, file: !2, line: 135, type: !228, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!228 = !DISubroutineType(types: !229)
!229 = !{null}
!230 = !DILocation(line: 135, column: 20, scope: !227)
!231 = distinct !DISubprogram(name: "CWE416_Use_After_Free__malloc_free_wchar_t_64b_badSink", scope: !19, file: !19, line: 24, type: !232, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!232 = !DISubroutineType(types: !233)
!233 = !{null, !41}
!234 = !DILocalVariable(name: "dataVoidPtr", arg: 1, scope: !231, file: !19, line: 24, type: !41)
!235 = !DILocation(line: 24, column: 68, scope: !231)
!236 = !DILocalVariable(name: "dataPtr", scope: !231, file: !19, line: 27, type: !42)
!237 = !DILocation(line: 27, column: 17, scope: !231)
!238 = !DILocation(line: 27, column: 40, scope: !231)
!239 = !DILocalVariable(name: "data", scope: !231, file: !19, line: 29, type: !43)
!240 = !DILocation(line: 29, column: 15, scope: !231)
!241 = !DILocation(line: 29, column: 24, scope: !231)
!242 = !DILocation(line: 29, column: 23, scope: !231)
!243 = !DILocation(line: 31, column: 13, scope: !231)
!244 = !DILocation(line: 31, column: 5, scope: !231)
!245 = !DILocation(line: 33, column: 1, scope: !231)
!246 = distinct !DISubprogram(name: "CWE416_Use_After_Free__malloc_free_wchar_t_64b_goodG2BSink", scope: !19, file: !19, line: 40, type: !232, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!247 = !DILocalVariable(name: "dataVoidPtr", arg: 1, scope: !246, file: !19, line: 40, type: !41)
!248 = !DILocation(line: 40, column: 72, scope: !246)
!249 = !DILocalVariable(name: "dataPtr", scope: !246, file: !19, line: 43, type: !42)
!250 = !DILocation(line: 43, column: 17, scope: !246)
!251 = !DILocation(line: 43, column: 40, scope: !246)
!252 = !DILocalVariable(name: "data", scope: !246, file: !19, line: 45, type: !43)
!253 = !DILocation(line: 45, column: 15, scope: !246)
!254 = !DILocation(line: 45, column: 24, scope: !246)
!255 = !DILocation(line: 45, column: 23, scope: !246)
!256 = !DILocation(line: 47, column: 17, scope: !246)
!257 = !DILocation(line: 47, column: 5, scope: !246)
!258 = !DILocation(line: 49, column: 1, scope: !246)
!259 = distinct !DISubprogram(name: "CWE416_Use_After_Free__malloc_free_wchar_t_64b_goodB2GSink", scope: !19, file: !19, line: 52, type: !232, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!260 = !DILocalVariable(name: "dataVoidPtr", arg: 1, scope: !259, file: !19, line: 52, type: !41)
!261 = !DILocation(line: 52, column: 72, scope: !259)
!262 = !DILocalVariable(name: "dataPtr", scope: !259, file: !19, line: 55, type: !42)
!263 = !DILocation(line: 55, column: 17, scope: !259)
!264 = !DILocation(line: 55, column: 40, scope: !259)
!265 = !DILocalVariable(name: "data", scope: !259, file: !19, line: 57, type: !43)
!266 = !DILocation(line: 57, column: 15, scope: !259)
!267 = !DILocation(line: 57, column: 24, scope: !259)
!268 = !DILocation(line: 57, column: 23, scope: !259)
!269 = !DILocation(line: 62, column: 1, scope: !259)
!270 = distinct !DISubprogram(name: "CWE416_Use_After_Free__malloc_free_wchar_t_64_bad", scope: !19, file: !19, line: 71, type: !228, scopeLine: 72, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!271 = !DILocalVariable(name: "data", scope: !270, file: !19, line: 73, type: !43)
!272 = !DILocation(line: 73, column: 15, scope: !270)
!273 = !DILocation(line: 75, column: 10, scope: !270)
!274 = !DILocation(line: 76, column: 23, scope: !270)
!275 = !DILocation(line: 76, column: 10, scope: !270)
!276 = !DILocation(line: 77, column: 13, scope: !270)
!277 = !DILocation(line: 77, column: 5, scope: !270)
!278 = !DILocation(line: 78, column: 5, scope: !270)
!279 = !DILocation(line: 78, column: 17, scope: !270)
!280 = !DILocation(line: 80, column: 10, scope: !270)
!281 = !DILocation(line: 80, column: 5, scope: !270)
!282 = !DILocation(line: 81, column: 5, scope: !270)
!283 = !DILocation(line: 82, column: 1, scope: !270)
!284 = distinct !DISubprogram(name: "CWE416_Use_After_Free__malloc_free_wchar_t_64_good", scope: !19, file: !19, line: 119, type: !228, scopeLine: 120, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!285 = !DILocation(line: 121, column: 5, scope: !284)
!286 = !DILocation(line: 122, column: 5, scope: !284)
!287 = !DILocation(line: 123, column: 1, scope: !284)
!288 = distinct !DISubprogram(name: "main", scope: !19, file: !19, line: 134, type: !289, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !38, retainedNodes: !60)
!289 = !DISubroutineType(types: !290)
!290 = !{!46, !46, !291}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!292 = !DILocalVariable(name: "argc", arg: 1, scope: !288, file: !19, line: 134, type: !46)
!293 = !DILocation(line: 134, column: 14, scope: !288)
!294 = !DILocalVariable(name: "argv", arg: 2, scope: !288, file: !19, line: 134, type: !291)
!295 = !DILocation(line: 134, column: 27, scope: !288)
!296 = !DILocation(line: 137, column: 22, scope: !288)
!297 = !DILocation(line: 137, column: 12, scope: !288)
!298 = !DILocation(line: 137, column: 5, scope: !288)
!299 = !DILocation(line: 139, column: 5, scope: !288)
!300 = !DILocation(line: 140, column: 5, scope: !288)
!301 = !DILocation(line: 141, column: 5, scope: !288)
!302 = !DILocation(line: 144, column: 5, scope: !288)
!303 = !DILocation(line: 145, column: 5, scope: !288)
!304 = !DILocation(line: 146, column: 5, scope: !288)
!305 = !DILocation(line: 148, column: 5, scope: !288)
!306 = distinct !DISubprogram(name: "goodG2B", scope: !19, file: !19, line: 91, type: !228, scopeLine: 92, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !38, retainedNodes: !60)
!307 = !DILocalVariable(name: "data", scope: !306, file: !19, line: 93, type: !43)
!308 = !DILocation(line: 93, column: 15, scope: !306)
!309 = !DILocation(line: 95, column: 10, scope: !306)
!310 = !DILocation(line: 96, column: 23, scope: !306)
!311 = !DILocation(line: 96, column: 10, scope: !306)
!312 = !DILocation(line: 97, column: 13, scope: !306)
!313 = !DILocation(line: 97, column: 5, scope: !306)
!314 = !DILocation(line: 98, column: 5, scope: !306)
!315 = !DILocation(line: 98, column: 17, scope: !306)
!316 = !DILocation(line: 100, column: 5, scope: !306)
!317 = !DILocation(line: 101, column: 1, scope: !306)
!318 = distinct !DISubprogram(name: "goodB2G", scope: !19, file: !19, line: 106, type: !228, scopeLine: 107, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !38, retainedNodes: !60)
!319 = !DILocalVariable(name: "data", scope: !318, file: !19, line: 108, type: !43)
!320 = !DILocation(line: 108, column: 15, scope: !318)
!321 = !DILocation(line: 110, column: 10, scope: !318)
!322 = !DILocation(line: 111, column: 23, scope: !318)
!323 = !DILocation(line: 111, column: 10, scope: !318)
!324 = !DILocation(line: 112, column: 13, scope: !318)
!325 = !DILocation(line: 112, column: 5, scope: !318)
!326 = !DILocation(line: 113, column: 5, scope: !318)
!327 = !DILocation(line: 113, column: 17, scope: !318)
!328 = !DILocation(line: 115, column: 10, scope: !318)
!329 = !DILocation(line: 115, column: 5, scope: !318)
!330 = !DILocation(line: 116, column: 5, scope: !318)
!331 = !DILocation(line: 117, column: 1, scope: !318)
