; ModuleID = '/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite/test_cases_bc/tdf/CWE415_Double_Free__malloc_free_long_22a.c.bc'
source_filename = "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite/src/tdf/CWE415_Double_Free__malloc_free_long_22a.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1, !dbg !12
@CWE415_Double_Free__malloc_free_long_22_badGlobal = dso_local global i32 0, align 4, !dbg !17
@CWE415_Double_Free__malloc_free_long_22_goodB2G1Global = dso_local global i32 0, align 4, !dbg !33
@.str.3 = private unnamed_addr constant [21 x i8] c"Benign, fixed string\00", align 1, !dbg !27
@CWE415_Double_Free__malloc_free_long_22_goodB2G2Global = dso_local global i32 0, align 4, !dbg !36
@CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal = dso_local global i32 0, align 4, !dbg !38
@.str.4 = private unnamed_addr constant [18 x i8] c"Calling good()...\00", align 1, !dbg !40
@.str.5 = private unnamed_addr constant [16 x i8] c"Finished good()\00", align 1, !dbg !45
@.str.6 = private unnamed_addr constant [17 x i8] c"Calling bad()...\00", align 1, !dbg !50
@.str.7 = private unnamed_addr constant [15 x i8] c"Finished bad()\00", align 1, !dbg !55

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MUSTALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !68 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !72, metadata !DIExpression()), !dbg !73
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !74, metadata !DIExpression()), !dbg !75
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !76
  ret void, !dbg !77
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(ptr noundef, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PARTIALALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !78 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !79, metadata !DIExpression()), !dbg !80
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !81, metadata !DIExpression()), !dbg !82
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !83
  ret void, !dbg !84
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !85 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !86, metadata !DIExpression()), !dbg !87
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !88, metadata !DIExpression()), !dbg !89
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !90
  ret void, !dbg !91
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NOALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !92 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !93, metadata !DIExpression()), !dbg !94
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !95, metadata !DIExpression()), !dbg !96
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !97
  ret void, !dbg !98
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_MAYALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !99 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !100, metadata !DIExpression()), !dbg !101
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !102, metadata !DIExpression()), !dbg !103
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !104
  ret void, !dbg !105
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_NOALIAS(ptr noundef %p, ptr noundef %q) #0 !dbg !106 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !107, metadata !DIExpression()), !dbg !108
  store ptr %q, ptr %q.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !109, metadata !DIExpression()), !dbg !110
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !111
  ret void, !dbg !112
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !113 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !116, metadata !DIExpression()), !dbg !117
  %0 = load i32, ptr %n.addr, align 4, !dbg !118
  %conv = sext i32 %0 to i64, !dbg !118
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !119
  ret ptr %call, !dbg !120
}

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @DOUBLEFREEMALLOC(i32 noundef %n) #0 !dbg !121 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !122, metadata !DIExpression()), !dbg !123
  %0 = load i32, ptr %n.addr, align 4, !dbg !124
  %conv = sext i32 %0 to i64, !dbg !124
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !125
  ret ptr %call, !dbg !126
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !127 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !128, metadata !DIExpression()), !dbg !129
  %0 = load i32, ptr %n.addr, align 4, !dbg !130
  %conv = sext i32 %0 to i64, !dbg !130
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !131
  ret ptr %call, !dbg !132
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !133 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !134, metadata !DIExpression()), !dbg !135
  %0 = load i32, ptr %n.addr, align 4, !dbg !136
  %conv = sext i32 %0 to i64, !dbg !136
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !137
  ret ptr %call, !dbg !138
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !139 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !140, metadata !DIExpression()), !dbg !141
  %0 = load i32, ptr %n.addr, align 4, !dbg !142
  %conv = sext i32 %0 to i64, !dbg !142
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !143
  ret ptr %call, !dbg !144
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !145 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !146, metadata !DIExpression()), !dbg !147
  %0 = load i32, ptr %n.addr, align 4, !dbg !148
  %conv = sext i32 %0 to i64, !dbg !148
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !149
  ret ptr %call, !dbg !150
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !151 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !152, metadata !DIExpression()), !dbg !153
  %0 = load i32, ptr %n.addr, align 4, !dbg !154
  %conv = sext i32 %0 to i64, !dbg !154
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !155
  ret ptr %call, !dbg !156
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !157 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !158, metadata !DIExpression()), !dbg !159
  %0 = load i32, ptr %n.addr, align 4, !dbg !160
  %conv = sext i32 %0 to i64, !dbg !160
  %call = call noalias ptr @malloc(i64 noundef %conv) #5, !dbg !161
  ret ptr %call, !dbg !162
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RC_ACCESS(i32 noundef %id, i32 noundef %flags) #0 !dbg !163 {
entry:
  %id.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %id, ptr %id.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %id.addr, metadata !166, metadata !DIExpression()), !dbg !167
  store i32 %flags, ptr %flags.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !168, metadata !DIExpression()), !dbg !169
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str), !dbg !170
  ret void, !dbg !171
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CXT_THREAD(i32 noundef %thdid, ptr noundef %cxt) #0 !dbg !172 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %thdid.addr, metadata !176, metadata !DIExpression()), !dbg !177
  store ptr %cxt, ptr %cxt.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %cxt.addr, metadata !178, metadata !DIExpression()), !dbg !179
  ret void, !dbg !180
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @TCT_ACCESS(i32 noundef %thdid, ptr noundef %cxt) #0 !dbg !181 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %thdid.addr, metadata !182, metadata !DIExpression()), !dbg !183
  store ptr %cxt, ptr %cxt.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %cxt.addr, metadata !184, metadata !DIExpression()), !dbg !185
  ret void, !dbg !186
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @INTERLEV_ACCESS(i32 noundef %thdid, ptr noundef %cxt, ptr noundef %lev) #0 !dbg !187 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  %lev.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %thdid.addr, metadata !190, metadata !DIExpression()), !dbg !191
  store ptr %cxt, ptr %cxt.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %cxt.addr, metadata !192, metadata !DIExpression()), !dbg !193
  store ptr %lev, ptr %lev.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %lev.addr, metadata !194, metadata !DIExpression()), !dbg !195
  ret void, !dbg !196
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @LOCK(ptr noundef %lockname) #0 !dbg !197 {
entry:
  %lockname.addr = alloca ptr, align 8
  store ptr %lockname, ptr %lockname.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %lockname.addr, metadata !200, metadata !DIExpression()), !dbg !201
  ret void, !dbg !202
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PAUSE(ptr noundef %str) #0 !dbg !203 {
entry:
  %str.addr = alloca ptr, align 8
  store ptr %str, ptr %str.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %str.addr, metadata !204, metadata !DIExpression()), !dbg !205
  %0 = load ptr, ptr %str.addr, align 8, !dbg !206
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str.1, ptr noundef %0), !dbg !207
  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.2), !dbg !208
  %call2 = call i32 @getchar(), !dbg !209
  ret void, !dbg !210
}

declare i32 @getchar() #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEUAFFUNC(ptr noundef %p) #0 !dbg !211 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !215, metadata !DIExpression()), !dbg !216
  %0 = load ptr, ptr %p.addr, align 8, !dbg !217
  store i32 0, ptr %0, align 4, !dbg !218
  %1 = load ptr, ptr %retval, align 8, !dbg !219
  ret ptr %1, !dbg !219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @UAFFUNC(ptr noundef %p) #0 !dbg !220 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !221, metadata !DIExpression()), !dbg !222
  %0 = load ptr, ptr %p.addr, align 8, !dbg !223
  store i32 0, ptr %0, align 4, !dbg !224
  %1 = load ptr, ptr %retval, align 8, !dbg !225
  ret ptr %1, !dbg !225
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEFREE(ptr noundef %p) #0 !dbg !226 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !227, metadata !DIExpression()), !dbg !228
  %0 = load ptr, ptr %p.addr, align 8, !dbg !229
  call void @free(ptr noundef %0) #6, !dbg !230
  %1 = load ptr, ptr %retval, align 8, !dbg !231
  ret ptr %1, !dbg !231
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @DOUBLEFREE(ptr noundef %p) #0 !dbg !232 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !233, metadata !DIExpression()), !dbg !234
  %0 = load ptr, ptr %p.addr, align 8, !dbg !235
  call void @free(ptr noundef %0) #6, !dbg !236
  %1 = load ptr, ptr %retval, align 8, !dbg !237
  ret ptr %1, !dbg !237
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deref() #0 !dbg !238 {
entry:
  ret void, !dbg !241
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE415_Double_Free__malloc_free_long_22_badSink(ptr noundef %data) #0 !dbg !242 {
entry:
  %data.addr = alloca ptr, align 8
  store ptr %data, ptr %data.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !245, metadata !DIExpression()), !dbg !246
  %0 = load i32, ptr @CWE415_Double_Free__malloc_free_long_22_badGlobal, align 4, !dbg !247
  %tobool = icmp ne i32 %0, 0, !dbg !247
  br i1 %tobool, label %if.then, label %if.end, !dbg !249

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %data.addr, align 8, !dbg !250
  %call = call ptr @DOUBLEFREE(ptr noundef %1), !dbg !252
  br label %if.end, !dbg !253

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE415_Double_Free__malloc_free_long_22_goodB2G1Sink(ptr noundef %data) #0 !dbg !255 {
entry:
  %data.addr = alloca ptr, align 8
  store ptr %data, ptr %data.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !256, metadata !DIExpression()), !dbg !257
  %0 = load i32, ptr @CWE415_Double_Free__malloc_free_long_22_goodB2G1Global, align 4, !dbg !258
  %tobool = icmp ne i32 %0, 0, !dbg !258
  br i1 %tobool, label %if.then, label %if.else, !dbg !260

if.then:                                          ; preds = %entry
  call void @printLine(ptr noundef @.str.3), !dbg !261
  br label %if.end, !dbg !263

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !264
}

declare void @printLine(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE415_Double_Free__malloc_free_long_22_goodB2G2Sink(ptr noundef %data) #0 !dbg !265 {
entry:
  %data.addr = alloca ptr, align 8
  store ptr %data, ptr %data.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !266, metadata !DIExpression()), !dbg !267
  %0 = load i32, ptr @CWE415_Double_Free__malloc_free_long_22_goodB2G2Global, align 4, !dbg !268
  %tobool = icmp ne i32 %0, 0, !dbg !268
  br i1 %tobool, label %if.then, label %if.end, !dbg !270

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !271

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !273
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE415_Double_Free__malloc_free_long_22_goodG2BSink(ptr noundef %data) #0 !dbg !274 {
entry:
  %data.addr = alloca ptr, align 8
  store ptr %data, ptr %data.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !275, metadata !DIExpression()), !dbg !276
  %0 = load i32, ptr @CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal, align 4, !dbg !277
  %tobool = icmp ne i32 %0, 0, !dbg !277
  br i1 %tobool, label %if.then, label %if.end, !dbg !279

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %data.addr, align 8, !dbg !280
  %call = call ptr @SAFEFREE(ptr noundef %1), !dbg !282
  br label %if.end, !dbg !283

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE415_Double_Free__malloc_free_long_22_bad() #0 !dbg !285 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !286, metadata !DIExpression()), !dbg !287
  store ptr null, ptr %data, align 8, !dbg !288
  %call = call ptr @DOUBLEFREEMALLOC(i32 noundef 800), !dbg !289
  store ptr %call, ptr %data, align 8, !dbg !290
  %0 = load ptr, ptr %data, align 8, !dbg !291
  %call1 = call ptr @SAFEFREE(ptr noundef %0), !dbg !292
  store i32 1, ptr @CWE415_Double_Free__malloc_free_long_22_badGlobal, align 4, !dbg !293
  %1 = load ptr, ptr %data, align 8, !dbg !294
  call void @CWE415_Double_Free__malloc_free_long_22_badSink(ptr noundef %1), !dbg !295
  ret void, !dbg !296
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE415_Double_Free__malloc_free_long_22_good() #0 !dbg !297 {
entry:
  call void @goodB2G1(), !dbg !298
  call void @goodB2G2(), !dbg !299
  call void @goodG2B(), !dbg !300
  ret void, !dbg !301
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %argc, ptr noundef %argv) #0 !dbg !302 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  store i32 %argc, ptr %argc.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %argc.addr, metadata !306, metadata !DIExpression()), !dbg !307
  store ptr %argv, ptr %argv.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %argv.addr, metadata !308, metadata !DIExpression()), !dbg !309
  %call = call i64 @time(ptr noundef null) #6, !dbg !310
  %conv = trunc i64 %call to i32, !dbg !311
  call void @srand(i32 noundef %conv) #6, !dbg !312
  call void @printLine(ptr noundef @.str.4), !dbg !313
  call void @CWE415_Double_Free__malloc_free_long_22_good(), !dbg !314
  call void @printLine(ptr noundef @.str.5), !dbg !315
  call void @printLine(ptr noundef @.str.6), !dbg !316
  call void @CWE415_Double_Free__malloc_free_long_22_bad(), !dbg !317
  call void @printLine(ptr noundef @.str.7), !dbg !318
  ret i32 0, !dbg !319
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) #4

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodB2G1() #0 !dbg !320 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !321, metadata !DIExpression()), !dbg !322
  store ptr null, ptr %data, align 8, !dbg !323
  %call = call ptr @SAFEMALLOC(i32 noundef 800), !dbg !324
  store ptr %call, ptr %data, align 8, !dbg !325
  %0 = load ptr, ptr %data, align 8, !dbg !326
  %call1 = call ptr @SAFEFREE(ptr noundef %0), !dbg !327
  store i32 0, ptr @CWE415_Double_Free__malloc_free_long_22_goodB2G1Global, align 4, !dbg !328
  %1 = load ptr, ptr %data, align 8, !dbg !329
  call void @CWE415_Double_Free__malloc_free_long_22_goodB2G1Sink(ptr noundef %1), !dbg !330
  ret void, !dbg !331
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodB2G2() #0 !dbg !332 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !333, metadata !DIExpression()), !dbg !334
  store ptr null, ptr %data, align 8, !dbg !335
  %call = call ptr @SAFEMALLOC(i32 noundef 800), !dbg !336
  store ptr %call, ptr %data, align 8, !dbg !337
  %0 = load ptr, ptr %data, align 8, !dbg !338
  %call1 = call ptr @SAFEFREE(ptr noundef %0), !dbg !339
  store i32 1, ptr @CWE415_Double_Free__malloc_free_long_22_goodB2G2Global, align 4, !dbg !340
  %1 = load ptr, ptr %data, align 8, !dbg !341
  call void @CWE415_Double_Free__malloc_free_long_22_goodB2G2Sink(ptr noundef %1), !dbg !342
  ret void, !dbg !343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodG2B() #0 !dbg !344 {
entry:
  %data = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !345, metadata !DIExpression()), !dbg !346
  store ptr null, ptr %data, align 8, !dbg !347
  %call = call ptr @SAFEMALLOC(i32 noundef 800), !dbg !348
  store ptr %call, ptr %data, align 8, !dbg !349
  store i32 1, ptr @CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal, align 4, !dbg !350
  %0 = load ptr, ptr %data, align 8, !dbg !351
  call void @CWE415_Double_Free__malloc_free_long_22_goodG2BSink(ptr noundef %0), !dbg !352
  ret void, !dbg !353
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind allocsize(0) }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!19}
!llvm.module.flags = !{!60, !61, !62, !63, !64, !65, !66}
!llvm.ident = !{!67}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "aliascheck.h", directory: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite", checksumkind: CSK_MD5, checksum: "1a872d554bb9ccba276f530467d4645b")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 2)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 94, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 4)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 95, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 25)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "CWE415_Double_Free__malloc_free_long_22_badGlobal", scope: !19, file: !29, line: 87, type: !35, isLocal: false, isDefinition: true)
!19 = distinct !DICompileUnit(language: DW_LANG_C11, file: !20, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !21, globals: !26, splitDebugInlining: false, nameTableKind: None)
!20 = !DIFile(filename: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite/src/tdf/CWE415_Double_Free__malloc_free_long_22a.c", directory: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite", checksumkind: CSK_MD5, checksum: "055677eb7762ad7a2b37e5a141e72b15")
!21 = !{!22, !23, !25}
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!25 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!26 = !{!0, !7, !12, !27, !17, !33, !36, !38, !40, !45, !50, !55}
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(scope: null, file: !29, line: 51, type: !30, isLocal: true, isDefinition: true)
!29 = !DIFile(filename: "src/tdf/CWE415_Double_Free__malloc_free_long_22a.c", directory: "/g/data/ey69/xiao/project/Path-Sensitive-Analysis/Test-Suite", checksumkind: CSK_MD5, checksum: "055677eb7762ad7a2b37e5a141e72b15")
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 168, elements: !31)
!31 = !{!32}
!32 = !DISubrange(count: 21)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "CWE415_Double_Free__malloc_free_long_22_goodB2G1Global", scope: !19, file: !29, line: 108, type: !35, isLocal: false, isDefinition: true)
!35 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "CWE415_Double_Free__malloc_free_long_22_goodB2G2Global", scope: !19, file: !29, line: 109, type: !35, isLocal: false, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal", scope: !19, file: !29, line: 110, type: !35, isLocal: false, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(scope: null, file: !29, line: 177, type: !42, isLocal: true, isDefinition: true)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !43)
!43 = !{!44}
!44 = !DISubrange(count: 18)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(scope: null, file: !29, line: 179, type: !47, isLocal: true, isDefinition: true)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 16)
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(scope: null, file: !29, line: 182, type: !52, isLocal: true, isDefinition: true)
!52 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !53)
!53 = !{!54}
!54 = !DISubrange(count: 17)
!55 = !DIGlobalVariableExpression(var: !56, expr: !DIExpression())
!56 = distinct !DIGlobalVariable(scope: null, file: !29, line: 184, type: !57, isLocal: true, isDefinition: true)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 15)
!60 = !{i32 7, !"Dwarf Version", i32 5}
!61 = !{i32 2, !"Debug Info Version", i32 3}
!62 = !{i32 1, !"wchar_size", i32 4}
!63 = !{i32 8, !"PIC Level", i32 2}
!64 = !{i32 7, !"PIE Level", i32 2}
!65 = !{i32 7, !"uwtable", i32 2}
!66 = !{i32 7, !"frame-pointer", i32 2}
!67 = !{!"clang version 16.0.0"}
!68 = distinct !DISubprogram(name: "MUSTALIAS", scope: !2, file: !2, line: 4, type: !69, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!69 = !DISubroutineType(types: !70)
!70 = !{null, !22, !22}
!71 = !{}
!72 = !DILocalVariable(name: "p", arg: 1, scope: !68, file: !2, line: 4, type: !22)
!73 = !DILocation(line: 4, column: 22, scope: !68)
!74 = !DILocalVariable(name: "q", arg: 2, scope: !68, file: !2, line: 4, type: !22)
!75 = !DILocation(line: 4, column: 31, scope: !68)
!76 = !DILocation(line: 5, column: 3, scope: !68)
!77 = !DILocation(line: 6, column: 1, scope: !68)
!78 = distinct !DISubprogram(name: "PARTIALALIAS", scope: !2, file: !2, line: 8, type: !69, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!79 = !DILocalVariable(name: "p", arg: 1, scope: !78, file: !2, line: 8, type: !22)
!80 = !DILocation(line: 8, column: 25, scope: !78)
!81 = !DILocalVariable(name: "q", arg: 2, scope: !78, file: !2, line: 8, type: !22)
!82 = !DILocation(line: 8, column: 34, scope: !78)
!83 = !DILocation(line: 9, column: 3, scope: !78)
!84 = !DILocation(line: 10, column: 1, scope: !78)
!85 = distinct !DISubprogram(name: "MAYALIAS", scope: !2, file: !2, line: 12, type: !69, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!86 = !DILocalVariable(name: "p", arg: 1, scope: !85, file: !2, line: 12, type: !22)
!87 = !DILocation(line: 12, column: 21, scope: !85)
!88 = !DILocalVariable(name: "q", arg: 2, scope: !85, file: !2, line: 12, type: !22)
!89 = !DILocation(line: 12, column: 30, scope: !85)
!90 = !DILocation(line: 13, column: 3, scope: !85)
!91 = !DILocation(line: 14, column: 1, scope: !85)
!92 = distinct !DISubprogram(name: "NOALIAS", scope: !2, file: !2, line: 16, type: !69, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!93 = !DILocalVariable(name: "p", arg: 1, scope: !92, file: !2, line: 16, type: !22)
!94 = !DILocation(line: 16, column: 20, scope: !92)
!95 = !DILocalVariable(name: "q", arg: 2, scope: !92, file: !2, line: 16, type: !22)
!96 = !DILocation(line: 16, column: 29, scope: !92)
!97 = !DILocation(line: 17, column: 3, scope: !92)
!98 = !DILocation(line: 18, column: 1, scope: !92)
!99 = distinct !DISubprogram(name: "EXPECTEDFAIL_MAYALIAS", scope: !2, file: !2, line: 20, type: !69, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!100 = !DILocalVariable(name: "p", arg: 1, scope: !99, file: !2, line: 20, type: !22)
!101 = !DILocation(line: 20, column: 34, scope: !99)
!102 = !DILocalVariable(name: "q", arg: 2, scope: !99, file: !2, line: 20, type: !22)
!103 = !DILocation(line: 20, column: 43, scope: !99)
!104 = !DILocation(line: 21, column: 3, scope: !99)
!105 = !DILocation(line: 22, column: 1, scope: !99)
!106 = distinct !DISubprogram(name: "EXPECTEDFAIL_NOALIAS", scope: !2, file: !2, line: 24, type: !69, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!107 = !DILocalVariable(name: "p", arg: 1, scope: !106, file: !2, line: 24, type: !22)
!108 = !DILocation(line: 24, column: 33, scope: !106)
!109 = !DILocalVariable(name: "q", arg: 2, scope: !106, file: !2, line: 24, type: !22)
!110 = !DILocation(line: 24, column: 42, scope: !106)
!111 = !DILocation(line: 25, column: 3, scope: !106)
!112 = !DILocation(line: 26, column: 1, scope: !106)
!113 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !2, file: !2, line: 29, type: !114, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!114 = !DISubroutineType(types: !115)
!115 = !{!22, !35}
!116 = !DILocalVariable(name: "n", arg: 1, scope: !113, file: !2, line: 29, type: !35)
!117 = !DILocation(line: 29, column: 22, scope: !113)
!118 = !DILocation(line: 30, column: 17, scope: !113)
!119 = !DILocation(line: 30, column: 10, scope: !113)
!120 = !DILocation(line: 30, column: 3, scope: !113)
!121 = distinct !DISubprogram(name: "DOUBLEFREEMALLOC", scope: !2, file: !2, line: 33, type: !114, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!122 = !DILocalVariable(name: "n", arg: 1, scope: !121, file: !2, line: 33, type: !35)
!123 = !DILocation(line: 33, column: 28, scope: !121)
!124 = !DILocation(line: 34, column: 19, scope: !121)
!125 = !DILocation(line: 34, column: 12, scope: !121)
!126 = !DILocation(line: 34, column: 5, scope: !121)
!127 = distinct !DISubprogram(name: "PLKMALLOC", scope: !2, file: !2, line: 37, type: !114, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!128 = !DILocalVariable(name: "n", arg: 1, scope: !127, file: !2, line: 37, type: !35)
!129 = !DILocation(line: 37, column: 21, scope: !127)
!130 = !DILocation(line: 38, column: 17, scope: !127)
!131 = !DILocation(line: 38, column: 10, scope: !127)
!132 = !DILocation(line: 38, column: 3, scope: !127)
!133 = distinct !DISubprogram(name: "NFRMALLOC", scope: !2, file: !2, line: 41, type: !114, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!134 = !DILocalVariable(name: "n", arg: 1, scope: !133, file: !2, line: 41, type: !35)
!135 = !DILocation(line: 41, column: 21, scope: !133)
!136 = !DILocation(line: 42, column: 17, scope: !133)
!137 = !DILocation(line: 42, column: 10, scope: !133)
!138 = !DILocation(line: 42, column: 3, scope: !133)
!139 = distinct !DISubprogram(name: "CLKMALLOC", scope: !2, file: !2, line: 45, type: !114, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!140 = !DILocalVariable(name: "n", arg: 1, scope: !139, file: !2, line: 45, type: !35)
!141 = !DILocation(line: 45, column: 21, scope: !139)
!142 = !DILocation(line: 46, column: 17, scope: !139)
!143 = !DILocation(line: 46, column: 10, scope: !139)
!144 = !DILocation(line: 46, column: 3, scope: !139)
!145 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !2, file: !2, line: 49, type: !114, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!146 = !DILocalVariable(name: "n", arg: 1, scope: !145, file: !2, line: 49, type: !35)
!147 = !DILocation(line: 49, column: 21, scope: !145)
!148 = !DILocation(line: 50, column: 17, scope: !145)
!149 = !DILocation(line: 50, column: 10, scope: !145)
!150 = !DILocation(line: 50, column: 3, scope: !145)
!151 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !2, file: !2, line: 53, type: !114, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!152 = !DILocalVariable(name: "n", arg: 1, scope: !151, file: !2, line: 53, type: !35)
!153 = !DILocation(line: 53, column: 21, scope: !151)
!154 = !DILocation(line: 54, column: 17, scope: !151)
!155 = !DILocation(line: 54, column: 10, scope: !151)
!156 = !DILocation(line: 54, column: 3, scope: !151)
!157 = distinct !DISubprogram(name: "LEAKFN", scope: !2, file: !2, line: 57, type: !114, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!158 = !DILocalVariable(name: "n", arg: 1, scope: !157, file: !2, line: 57, type: !35)
!159 = !DILocation(line: 57, column: 18, scope: !157)
!160 = !DILocation(line: 58, column: 17, scope: !157)
!161 = !DILocation(line: 58, column: 10, scope: !157)
!162 = !DILocation(line: 58, column: 3, scope: !157)
!163 = distinct !DISubprogram(name: "RC_ACCESS", scope: !2, file: !2, line: 67, type: !164, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!164 = !DISubroutineType(types: !165)
!165 = !{null, !35, !35}
!166 = !DILocalVariable(name: "id", arg: 1, scope: !163, file: !2, line: 67, type: !35)
!167 = !DILocation(line: 67, column: 20, scope: !163)
!168 = !DILocalVariable(name: "flags", arg: 2, scope: !163, file: !2, line: 67, type: !35)
!169 = !DILocation(line: 67, column: 28, scope: !163)
!170 = !DILocation(line: 68, column: 3, scope: !163)
!171 = !DILocation(line: 69, column: 1, scope: !163)
!172 = distinct !DISubprogram(name: "CXT_THREAD", scope: !2, file: !2, line: 79, type: !173, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!173 = !DISubroutineType(types: !174)
!174 = !{null, !35, !175}
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!176 = !DILocalVariable(name: "thdid", arg: 1, scope: !172, file: !2, line: 79, type: !35)
!177 = !DILocation(line: 79, column: 21, scope: !172)
!178 = !DILocalVariable(name: "cxt", arg: 2, scope: !172, file: !2, line: 79, type: !175)
!179 = !DILocation(line: 79, column: 34, scope: !172)
!180 = !DILocation(line: 81, column: 1, scope: !172)
!181 = distinct !DISubprogram(name: "TCT_ACCESS", scope: !2, file: !2, line: 82, type: !173, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!182 = !DILocalVariable(name: "thdid", arg: 1, scope: !181, file: !2, line: 82, type: !35)
!183 = !DILocation(line: 82, column: 21, scope: !181)
!184 = !DILocalVariable(name: "cxt", arg: 2, scope: !181, file: !2, line: 82, type: !175)
!185 = !DILocation(line: 82, column: 33, scope: !181)
!186 = !DILocation(line: 84, column: 1, scope: !181)
!187 = distinct !DISubprogram(name: "INTERLEV_ACCESS", scope: !2, file: !2, line: 85, type: !188, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!188 = !DISubroutineType(types: !189)
!189 = !{null, !35, !175, !175}
!190 = !DILocalVariable(name: "thdid", arg: 1, scope: !187, file: !2, line: 85, type: !35)
!191 = !DILocation(line: 85, column: 26, scope: !187)
!192 = !DILocalVariable(name: "cxt", arg: 2, scope: !187, file: !2, line: 85, type: !175)
!193 = !DILocation(line: 85, column: 38, scope: !187)
!194 = !DILocalVariable(name: "lev", arg: 3, scope: !187, file: !2, line: 85, type: !175)
!195 = !DILocation(line: 85, column: 49, scope: !187)
!196 = !DILocation(line: 87, column: 1, scope: !187)
!197 = distinct !DISubprogram(name: "LOCK", scope: !2, file: !2, line: 89, type: !198, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!198 = !DISubroutineType(types: !199)
!199 = !{null, !175}
!200 = !DILocalVariable(name: "lockname", arg: 1, scope: !197, file: !2, line: 89, type: !175)
!201 = !DILocation(line: 89, column: 17, scope: !197)
!202 = !DILocation(line: 91, column: 1, scope: !197)
!203 = distinct !DISubprogram(name: "PAUSE", scope: !2, file: !2, line: 93, type: !198, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!204 = !DILocalVariable(name: "str", arg: 1, scope: !203, file: !2, line: 93, type: !175)
!205 = !DILocation(line: 93, column: 18, scope: !203)
!206 = !DILocation(line: 94, column: 18, scope: !203)
!207 = !DILocation(line: 94, column: 3, scope: !203)
!208 = !DILocation(line: 95, column: 3, scope: !203)
!209 = !DILocation(line: 96, column: 3, scope: !203)
!210 = !DILocation(line: 97, column: 1, scope: !203)
!211 = distinct !DISubprogram(name: "SAFEUAFFUNC", scope: !2, file: !2, line: 100, type: !212, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!212 = !DISubroutineType(types: !213)
!213 = !{!22, !214}
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!215 = !DILocalVariable(name: "p", arg: 1, scope: !211, file: !2, line: 100, type: !214)
!216 = !DILocation(line: 100, column: 24, scope: !211)
!217 = !DILocation(line: 101, column: 6, scope: !211)
!218 = !DILocation(line: 101, column: 8, scope: !211)
!219 = !DILocation(line: 102, column: 1, scope: !211)
!220 = distinct !DISubprogram(name: "UAFFUNC", scope: !2, file: !2, line: 104, type: !212, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!221 = !DILocalVariable(name: "p", arg: 1, scope: !220, file: !2, line: 104, type: !214)
!222 = !DILocation(line: 104, column: 20, scope: !220)
!223 = !DILocation(line: 105, column: 6, scope: !220)
!224 = !DILocation(line: 105, column: 8, scope: !220)
!225 = !DILocation(line: 106, column: 1, scope: !220)
!226 = distinct !DISubprogram(name: "SAFEFREE", scope: !2, file: !2, line: 110, type: !212, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!227 = !DILocalVariable(name: "p", arg: 1, scope: !226, file: !2, line: 110, type: !214)
!228 = !DILocation(line: 110, column: 22, scope: !226)
!229 = !DILocation(line: 111, column: 10, scope: !226)
!230 = !DILocation(line: 111, column: 5, scope: !226)
!231 = !DILocation(line: 112, column: 1, scope: !226)
!232 = distinct !DISubprogram(name: "DOUBLEFREE", scope: !2, file: !2, line: 115, type: !212, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!233 = !DILocalVariable(name: "p", arg: 1, scope: !232, file: !2, line: 115, type: !214)
!234 = !DILocation(line: 115, column: 24, scope: !232)
!235 = !DILocation(line: 116, column: 10, scope: !232)
!236 = !DILocation(line: 116, column: 5, scope: !232)
!237 = !DILocation(line: 117, column: 1, scope: !232)
!238 = distinct !DISubprogram(name: "deref", scope: !2, file: !2, line: 135, type: !239, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!239 = !DISubroutineType(types: !240)
!240 = !{null}
!241 = !DILocation(line: 135, column: 20, scope: !238)
!242 = distinct !DISubprogram(name: "CWE415_Double_Free__malloc_free_long_22_badSink", scope: !29, file: !29, line: 27, type: !243, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!243 = !DISubroutineType(types: !244)
!244 = !{null, !23}
!245 = !DILocalVariable(name: "data", arg: 1, scope: !242, file: !29, line: 27, type: !23)
!246 = !DILocation(line: 27, column: 61, scope: !242)
!247 = !DILocation(line: 29, column: 8, scope: !248)
!248 = distinct !DILexicalBlock(scope: !242, file: !29, line: 29, column: 8)
!249 = !DILocation(line: 29, column: 8, scope: !242)
!250 = !DILocation(line: 32, column: 20, scope: !251)
!251 = distinct !DILexicalBlock(scope: !248, file: !29, line: 30, column: 5)
!252 = !DILocation(line: 32, column: 9, scope: !251)
!253 = !DILocation(line: 33, column: 5, scope: !251)
!254 = !DILocation(line: 34, column: 1, scope: !242)
!255 = distinct !DISubprogram(name: "CWE415_Double_Free__malloc_free_long_22_goodB2G1Sink", scope: !29, file: !29, line: 46, type: !243, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!256 = !DILocalVariable(name: "data", arg: 1, scope: !255, file: !29, line: 46, type: !23)
!257 = !DILocation(line: 46, column: 66, scope: !255)
!258 = !DILocation(line: 48, column: 8, scope: !259)
!259 = distinct !DILexicalBlock(scope: !255, file: !29, line: 48, column: 8)
!260 = !DILocation(line: 48, column: 8, scope: !255)
!261 = !DILocation(line: 51, column: 9, scope: !262)
!262 = distinct !DILexicalBlock(scope: !259, file: !29, line: 49, column: 5)
!263 = !DILocation(line: 52, column: 5, scope: !262)
!264 = !DILocation(line: 59, column: 1, scope: !255)
!265 = distinct !DISubprogram(name: "CWE415_Double_Free__malloc_free_long_22_goodB2G2Sink", scope: !29, file: !29, line: 62, type: !243, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!266 = !DILocalVariable(name: "data", arg: 1, scope: !265, file: !29, line: 62, type: !23)
!267 = !DILocation(line: 62, column: 66, scope: !265)
!268 = !DILocation(line: 64, column: 8, scope: !269)
!269 = distinct !DILexicalBlock(scope: !265, file: !29, line: 64, column: 8)
!270 = !DILocation(line: 64, column: 8, scope: !265)
!271 = !DILocation(line: 69, column: 5, scope: !272)
!272 = distinct !DILexicalBlock(scope: !269, file: !29, line: 65, column: 5)
!273 = !DILocation(line: 70, column: 1, scope: !265)
!274 = distinct !DISubprogram(name: "CWE415_Double_Free__malloc_free_long_22_goodG2BSink", scope: !29, file: !29, line: 73, type: !243, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!275 = !DILocalVariable(name: "data", arg: 1, scope: !274, file: !29, line: 73, type: !23)
!276 = !DILocation(line: 73, column: 65, scope: !274)
!277 = !DILocation(line: 75, column: 8, scope: !278)
!278 = distinct !DILexicalBlock(scope: !274, file: !29, line: 75, column: 8)
!279 = !DILocation(line: 75, column: 8, scope: !274)
!280 = !DILocation(line: 78, column: 18, scope: !281)
!281 = distinct !DILexicalBlock(scope: !278, file: !29, line: 76, column: 5)
!282 = !DILocation(line: 78, column: 9, scope: !281)
!283 = !DILocation(line: 79, column: 5, scope: !281)
!284 = !DILocation(line: 80, column: 1, scope: !274)
!285 = distinct !DISubprogram(name: "CWE415_Double_Free__malloc_free_long_22_bad", scope: !29, file: !29, line: 91, type: !239, scopeLine: 92, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!286 = !DILocalVariable(name: "data", scope: !285, file: !29, line: 93, type: !23)
!287 = !DILocation(line: 93, column: 12, scope: !285)
!288 = !DILocation(line: 95, column: 10, scope: !285)
!289 = !DILocation(line: 96, column: 20, scope: !285)
!290 = !DILocation(line: 96, column: 10, scope: !285)
!291 = !DILocation(line: 98, column: 14, scope: !285)
!292 = !DILocation(line: 98, column: 5, scope: !285)
!293 = !DILocation(line: 99, column: 55, scope: !285)
!294 = !DILocation(line: 100, column: 53, scope: !285)
!295 = !DILocation(line: 100, column: 5, scope: !285)
!296 = !DILocation(line: 101, column: 1, scope: !285)
!297 = distinct !DISubprogram(name: "CWE415_Double_Free__malloc_free_long_22_good", scope: !29, file: !29, line: 156, type: !239, scopeLine: 157, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!298 = !DILocation(line: 158, column: 5, scope: !297)
!299 = !DILocation(line: 159, column: 5, scope: !297)
!300 = !DILocation(line: 160, column: 5, scope: !297)
!301 = !DILocation(line: 161, column: 1, scope: !297)
!302 = distinct !DISubprogram(name: "main", scope: !29, file: !29, line: 172, type: !303, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !19, retainedNodes: !71)
!303 = !DISubroutineType(types: !304)
!304 = !{!35, !35, !305}
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!306 = !DILocalVariable(name: "argc", arg: 1, scope: !302, file: !29, line: 172, type: !35)
!307 = !DILocation(line: 172, column: 14, scope: !302)
!308 = !DILocalVariable(name: "argv", arg: 2, scope: !302, file: !29, line: 172, type: !305)
!309 = !DILocation(line: 172, column: 27, scope: !302)
!310 = !DILocation(line: 175, column: 22, scope: !302)
!311 = !DILocation(line: 175, column: 12, scope: !302)
!312 = !DILocation(line: 175, column: 5, scope: !302)
!313 = !DILocation(line: 177, column: 5, scope: !302)
!314 = !DILocation(line: 178, column: 5, scope: !302)
!315 = !DILocation(line: 179, column: 5, scope: !302)
!316 = !DILocation(line: 182, column: 5, scope: !302)
!317 = !DILocation(line: 183, column: 5, scope: !302)
!318 = !DILocation(line: 184, column: 5, scope: !302)
!319 = !DILocation(line: 186, column: 5, scope: !302)
!320 = distinct !DISubprogram(name: "goodB2G1", scope: !29, file: !29, line: 115, type: !239, scopeLine: 116, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !19, retainedNodes: !71)
!321 = !DILocalVariable(name: "data", scope: !320, file: !29, line: 117, type: !23)
!322 = !DILocation(line: 117, column: 12, scope: !320)
!323 = !DILocation(line: 119, column: 10, scope: !320)
!324 = !DILocation(line: 120, column: 20, scope: !320)
!325 = !DILocation(line: 120, column: 10, scope: !320)
!326 = !DILocation(line: 122, column: 14, scope: !320)
!327 = !DILocation(line: 122, column: 5, scope: !320)
!328 = !DILocation(line: 123, column: 60, scope: !320)
!329 = !DILocation(line: 124, column: 58, scope: !320)
!330 = !DILocation(line: 124, column: 5, scope: !320)
!331 = !DILocation(line: 125, column: 1, scope: !320)
!332 = distinct !DISubprogram(name: "goodB2G2", scope: !29, file: !29, line: 130, type: !239, scopeLine: 131, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !19, retainedNodes: !71)
!333 = !DILocalVariable(name: "data", scope: !332, file: !29, line: 132, type: !23)
!334 = !DILocation(line: 132, column: 12, scope: !332)
!335 = !DILocation(line: 134, column: 10, scope: !332)
!336 = !DILocation(line: 135, column: 20, scope: !332)
!337 = !DILocation(line: 135, column: 10, scope: !332)
!338 = !DILocation(line: 137, column: 14, scope: !332)
!339 = !DILocation(line: 137, column: 5, scope: !332)
!340 = !DILocation(line: 138, column: 60, scope: !332)
!341 = !DILocation(line: 139, column: 58, scope: !332)
!342 = !DILocation(line: 139, column: 5, scope: !332)
!343 = !DILocation(line: 140, column: 1, scope: !332)
!344 = distinct !DISubprogram(name: "goodG2B", scope: !29, file: !29, line: 145, type: !239, scopeLine: 146, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !19, retainedNodes: !71)
!345 = !DILocalVariable(name: "data", scope: !344, file: !29, line: 147, type: !23)
!346 = !DILocation(line: 147, column: 12, scope: !344)
!347 = !DILocation(line: 149, column: 10, scope: !344)
!348 = !DILocation(line: 150, column: 20, scope: !344)
!349 = !DILocation(line: 150, column: 10, scope: !344)
!350 = !DILocation(line: 152, column: 59, scope: !344)
!351 = !DILocation(line: 153, column: 57, scope: !344)
!352 = !DILocation(line: 153, column: 5, scope: !344)
!353 = !DILocation(line: 154, column: 1, scope: !344)
